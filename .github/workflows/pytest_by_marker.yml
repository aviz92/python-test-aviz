name: Pytest by Marker

on:
  workflow_dispatch:
    inputs:
      marker:
        description: 'Pytest marker to run (e.g. slow, integration)'
        required: true
      sha:
        description: 'Commit SHA for status check'
        required: false
      pr_number:
        description: 'PR number to update status (optional)'
        required: false

jobs:
  pytest-marker:
    name: "pytest marker: ${{ inputs.marker }}"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.sha || github.sha }}

      - name: Get PR number from commit
        id: get-pr
        if: inputs.pr_number == '' && inputs.sha != ''
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pulls } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${context.repo.owner}:${context.ref.replace('refs/heads/', '')}`,
              state: 'open'
            });
            
            // Try to find PR by commit SHA
            for (const pull of pulls) {
              const { data: commits } = await github.rest.pulls.listCommits({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pull.number
              });
              
              if (commits.find(commit => commit.sha === '${{ inputs.sha }}')) {
                core.setOutput('pr_number', pull.number);
                break;
              }
            }

      - name: Set commit status to pending
        if: inputs.sha != ''
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ inputs.sha }}',
              state: 'pending',
              description: 'Running pytest marker: ${{ inputs.marker }}',
              context: 'pytest-marker/${{ inputs.marker }}'
            });

      - name: Set PR status to pending
        if: (inputs.pr_number != '' || steps.get-pr.outputs.pr_number != '')
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = '${{ inputs.pr_number }}' || '${{ steps.get-pr.outputs.pr_number }}';
            
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ inputs.sha || github.sha }}',
              state: 'pending',
              description: 'Running pytest marker: ${{ inputs.marker }}',
              context: 'pytest-marker/${{ inputs.marker }}',
              target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
            });

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pytest with marker
        id: pytest
        run: |
          echo "Running pytest with marker: ${{ inputs.marker }}"
          pytest -m "${{ inputs.marker }}" --maxfail=1 --disable-warnings -q

      - name: Set commit status to success
        if: success() && inputs.sha != ''
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ inputs.sha }}',
              state: 'success',
              description: 'Pytest marker ${{ inputs.marker }} passed',
              context: 'pytest-marker/${{ inputs.marker }}',
              target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
            });

      - name: Set PR status to success
        if: success() && (inputs.pr_number != '' || steps.get-pr.outputs.pr_number != '')
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = '${{ inputs.pr_number }}' || '${{ steps.get-pr.outputs.pr_number }}';
            
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ inputs.sha || github.sha }}',
              state: 'success',
              description: 'Pytest marker ${{ inputs.marker }} passed',
              context: 'pytest-marker/${{ inputs.marker }}',
              target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
            });

      - name: Set commit status to failure
        if: failure() && inputs.sha != ''
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ inputs.sha }}',
              state: 'failure',
              description: 'Pytest marker ${{ inputs.marker }} failed',
              context: 'pytest-marker/${{ inputs.marker }}',
              target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
            });

      - name: Set PR status to failure
        if: failure() && (inputs.pr_number != '' || steps.get-pr.outputs.pr_number != '')
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = '${{ inputs.pr_number }}' || '${{ steps.get-pr.outputs.pr_number }}';
            
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ inputs.sha || github.sha }}',
              state: 'failure',
              description: 'Pytest marker ${{ inputs.marker }} failed',
              context: 'pytest-marker/${{ inputs.marker }}',
              target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
            });
